{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;}
{\*\expandedcolortbl;;\csgray\c0;\csgray\c100000;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \cb3 \CocoaLigature0 1  ls\
    2  npm install\
    3  cd quickstart/\
    4  ls\
    5  npm install\
    6  npm start\
    7  npm start\
    8  ls\
    9  cd quickstart/\
   10  ls\
   11  npm start\
   12  npm start\
   13  npm start\
   14  sudo killall VDCAssistant\
   15  echo\
   16  echo $PATH\
   17  java -- version\
   18  java -version\
   19  echo $PATH\
   20  sudo killall VDCAssistant\
   21  hostnam\
   22  hostname\
   23  ionic\
   24  ls\
   25  cd ..\
   26  ls\
   27  cd kamalahuja/\
   28  ls\
   29  l\
   30  ls\
   31  cd Documents/\
   32  ls\
   33  cd KAMAL/\
   34  cd Workspace/\
   35  mkdir uconnect\
   36  cd uconnect/\
   37  git clone https://github.com/bhatvisu1000/uconnect.git\
   38  mongod\
   39  mongo\
   40  ionic\
   41  node -v\
   42  npm -v\
   43  sudo npm install -g ionic cordova\
   44  sudo /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"\
   45  /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"\
   46  brew update\
   47  brew install mongodb\
   48  mongod\
   49  brew install mongodb --with-openssl\
   50  mongod\
   51  java -version\
   52  c d.\
   53  cd ..\
   54  cd ..\
   55  cd ~\
   56  ls\
   57  cd ..\
   58  ls\
   59  cd kamalahuja/\
   60  ls\
   61  ls -lart\
   62  ls\
   63  cd ..\
   64  ls\
   65  cd ..\
   66  ls\
   67  ls -lart\
   68  cd ~/\
   69  ls -a\
   70  less .bash_sessions/\
   71  ls\
   72  cd ~/\
   73  ls\
   74  cd ..\
   75  cd ..\
   76  cd ~/\
   77  ls\
   78  touch .bash_profile\
   79  vi .bash_profile \
   80  ls\
   81  less .bash_profile \
   82  less .bash_profile \
   83  vi .bash_profile\
   84  less .bash_profile\
   85  less .bash_profile\
   86  mongod\
   87  clear\
   88  sudo mongod -f /Users/kamalahuja/Documents/KAMAL/Workspace/uconnect/uconnect/MongoDb/config/mongod_unix.conf \
   89  mongorestore --drop -d test //Users/kamalahuja/Downloads/mongod.backup\
   90  sudo mongorestore --drop -d test //Users/kamalahuja/Downloads/mongod.backup\
   91  ls\
   92  clear\
   93  sudo mongorestore --drop -d test //Users/kamalahuja/Downloads/mongod.backup/test\
   94  mongo\
   95  pip3\
   96  pip3 install flask\
   97  pip3 install pymongo\
   98  pip3 install persist-queue\
   99  pip3 install flask_cors\
  100  pip3 install daemon\
  101  ls\
  102  echo $PATH\
  103  vi ~/.bash_profile\
  104  export PATH=$PATH:/usr/bin/\
  105  ls\
  106  echo $PATH\
  107  export PATH=/usr/bin/\
  108  ls\
  109  echo $PATH\
  110  export PATH=/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin\
  111  ls\
  112  ls -a\
  113  vi .bash_profile\
  114  cd Documents/KAMAL/Workspace/uconnect/uconnect/\
  115  ls\
  116  cd myapp/src/\
  117  ls\
  118  python3 app_new.py\
  119  python3 app_new.py\
  120  ls\
  121  cd Documents/KAMAL/Workspace/uconnect/\
  122  ls\
  123  cd logs/\
  124  ls\
  125  cd webserver/\
  126  uConnect.log\
  127  ls\
  128  cd Documents/KAMAL/Workspace/uconnect/uconnect/uconnect-client/\
  129  ls\
  130  npm install\
  131  sudo npm install\
  132  node -v\
  133  pwd\
  134  ls\
  135  cd desktop\
  136  cd\
  137  cd Angular-GettingStarted-master/\
  138  cd APM\
  139  npm install\
  140  npm start\
  141  c:\\desktop\
  142  pwd\
  143  /Users/kamalahuja/Desktop/Angular-GettingStarted-master/APM\
  144  cd//Users/kamalahuja/Desktop/Angular-GettingStarted-master/APM\
  145  cd/Users/kamalahuja/Desktop/Angular-GettingStarted-master/APM\
  146  cls\
  147  clear\
  148  pwd\
  149  cd/Users/kamalahuja/Desktop/Angular-GettingStarted-master/APM\
  150  npm install\
  151  npm start \
  152  npm verson \
  153  node version \
  154  node js\
  155  clear\
  156  npm start\
  157  clear\
  158  node test\
  159  node test\
  160  node test\
  161  node test\
  162  node test1\
  163  node Problem5.js \
  164  node test\
  165  hostnme\
  166  hostname\
  167  node test\
  168  node test\
  169  node test\
  170  node test\
  171  node test\
  172  node test\
  173  node test\
  174  node test\
  175  node test\
  176  cd..\
  177  cd ..\
  178  cd ..\
  179  cd Documents/KAMAL/LearnIOS/\
  180  mkdir TodaysWidgetDemo\
  181  cd TodaysWidgetDemo/\
  182  git clone https://github.com/kamalahuja/TodayWidgetDemo.git\
  183  git checkout -b iosUpdateBranch\
  184  cd TodayWidgetDemo/\
  185  git status\
  186  git checkout -b iosUpdateBranch\
  187  git push\
  188  git push --set-upstream origin iosUpdateBranch\
  189  npm -version\
  190  node --version\
  191  npm update npm -g\
  192  node -v\
  193  ls\
  194  cd Documents/\
  195  ls\
  196  cd KAMAL/\
  197  ls\
  198  cd Workspace/\
  199  ls\
  200  cd Python\
  201  mkdir Python\
  202  cd Python/\
  203  conda create --name myDjangoEnv django\
  204  conda create --name myDjangoEnv django\
  205  conda info --envs\
  206  conda activate myDjangoEnv\
  207  conda install django\
  208  python\
  209  /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"\
  210  brew update && brew install azure-cli\
  211  az login\
  212  az functionapp -h\
  213  az functionapp -H\
  214  az functionapp -h\
  215  clear\
  216  az $resourceGroup = "AzureFunctionsHelloWorld"\
  217  $resourceGroup = "AzureFunctionsHelloWorld"\
  218  az group create -n "AzureFunctionsHelloWorld" -l "centralus"\
  219  az group create -n "AzureFunctionsHelloWorld" -l "centralus"\
  220  az group create -n "AzureFunctionsHelloWorld" -l "centralus"\
  221  az group create -n "AzureFunctionsHelloWorld" -l "centralus"\
  222  az functionapp -h\
  223  cls\
  224  clear\
  225  az storage account create\
  226  az storage account create -n "azurefunctionshelloworldstorage" -l "centralus" -g "AzureFunctionsHelloWorld"\
  227* az storage account create -n "azfunchelloworldstore" -l "centralus" -\
  228  ls\
  229  cd Documents/\
  230  ls\
  231  cd KAMAL/\
  232  ls\
  233  cd Workspace/\
  234  ls\
  235  mkdir AzureFunctions\
  236  cd AzureFunctions/\
  237  echo '\{"Application_Type":"web"\}' > props.json\
  238  ls\
  239  az storage account create -n "azureFuncAppInsight" -g "AzureFunctionsHelloWorld" --resource-type "Microsoft.Insights/components" --properties "@props.json"\
  240  az resource create -n "azureFuncAppInsight" -g "AzureFunctionsHelloWorld" --resource-type "Microsoft.Insights/components" --properties "@props.json"\
  241  az functionapp create -n "azureJavascriptFunc" -g "AzureFunctionsHelloWorld" --storage-account "azfunchelloworldstore" --app-insights "azureFuncAppInsight" --consumption-plan-location "centralus" --runtime javascript\
  242  az functionapp create -n "azureJavascriptFunc" -g "AzureFunctionsHelloWorld" --storage-account "azfunchelloworldstore" --app-insights "azureFuncAppInsight" --consumption-plan-location "centralus" --runtime node\
  243  history\
}